#!/usr/bin/env node
const os = require("node:os");
const path = require("node:path");
const process = require("node:process");
const fs = require("node:fs/promises");
const { pathExists, cliArguments, run } = require("../lib/shared.js");

// Supported OSs list
const supportedOSs = ["linux", "darwin", "win32"];

// Constants
const INSTALL_DIR = path.join(__dirname, "../bin");
const PLATFORM = os.platform();
const VERSION = "2.0.6";
const URL = (() => {
  switch (PLATFORM) {
    case "linux":
      return `https://github.com/iden3/circom/releases/download/v${VERSION}/circom-linux-amd64`;
    case "darwin":
      return `https://github.com/iden3/circom/releases/download/v${VERSION}/circom-macos-amd64`;
    case "win32":
      return `https://github.com/iden3/circom/releases/download/v${VERSION}/circom-windows-amd64.exe`;
    default:
      return "";
  }
})();
const CIRCOM_BIN = (() => {
  switch (PLATFORM) {
    case "linux":
      return path.join(INSTALL_DIR, "circom");
    case "darwin":
      return path.join(INSTALL_DIR, "circom");
    case "win32":
      return path.join(INSTALL_DIR, "circom.exe");
    default:
      return "";
  }
})();

async function main() {
  // Print help and exit if help flag
  if (cliArguments()["help"]) {
    console.log("Usage: ./scripts/fetch_circom [OPTIONS]");
    console.log("Options:");
    console.log("  --force     Force re-download of circom");
    console.log("  --verbose   Enable verbose output");
    console.log("  --help      Show this help message");
    process.exit();
  }

  // Exit if not supported OS
  if (!supportedOSs.includes(PLATFORM)) {
    console.log(`OS ${PLATFORM} not supported`);
    process.exit(1);
  }

  // Ensure install dir exists
  if (!pathExists(INSTALL_DIR)) await fs.mkdir(INSTALL_DIR);

  // Exit if already exists, ignore if force flag
  if (pathExists(CIRCOM_BIN) && !cliArguments()["force"]) {
    console.log(`Circom is already installed at ${CIRCOM_BIN}`);
    process.exit();
  }

  // Download circom
  console.log(`Downloading circom from: ${URL}`);
  await run(
    `curl`,
    ["-L", URL, "-o", CIRCOM_BIN],
    undefined,
    cliArguments()["verbose"]
  );
  await run(`chmod`, ["+x", CIRCOM_BIN], undefined, cliArguments()["verbose"]);
  console.log(`Circom installed to ${CIRCOM_BIN}`);
}

void main();
