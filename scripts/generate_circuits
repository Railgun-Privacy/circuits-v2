#!/usr/bin/env node
const fs = require('node:fs');
const path = require('node:path');

function template(nInputs, nOutputs) {
  return `pragma circom 2.0.6;
include "./library/joinsplit.circom";

component main{public [merkleRoot, boundParamsHash, nullifiers, commitmentsOut]} = JoinSplit(${nInputs}, ${nOutputs}, 16);`;
}

for (let i = 1; i <= 14; i++) {
  for (let j = 1; j <= 14 - i; j++) {
    if (i + j + 2 + 1 > 17) throw new Error('Invalid combination')
    const N = i.toString().padStart(2, '0');
    const M = j.toString().padStart(2, '0');
    fs.writeFileSync(path.join(__dirname, `../src/joinsplit_${N}x${M}.circom`), template(i, j));
  }
}
