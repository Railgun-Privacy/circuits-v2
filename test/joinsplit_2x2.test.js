const tester = require('circom_tester').wasm;
const assert = require('assert');

describe('Joinsplit 1x2', async () => {
  it('Should fail correctness with dummy input', async () => {
    const circuit = await tester('./src/joinsplit_2x2.circom', { reduceConstraints: false });

    // fix the hash and signature

    const inputs = {
      merkleRoot: 6222425295742392060788226778694769114506305024317843914902643617290374768963n,
      boundParamsHash: 5710287756984354871128133611023121898130345951914076394217910154190632022267n,
      nullifiers: [
        2488005839880174281371566850742862351218389849446606448043615745372921337838n,
        2488005839880174281371566850742862351218389849446606448043615745372921337837n
      ],
      commitmentsOut: [
        14442913796384197520571496765626647486596829362832619910396444542983171421557n,
        19252303434306434500840759223364185816884050656317846745992399487059334764561n
      ],
      token: 546584486846459126461364135121053344201067465379n,
      publicKey: [
        15684838006997671713939066069845237677934334329285343229142447933587909549584n,
        11878614856120328179849762231924033298788609151532558727282528569229552954628n
      ],
      signature: [
        16927417158026668872034053079746879482505341725377973536231219666755150412517n,
        4460683417520795250530582144217697783429941348945040786207839936208783640494n,
        323943078793744741814096352565656579413445122634109055822579790017960112397n
      ],
      randomIn: [40419079083657351839989032552519750558n, 40419079083657351839989032552519750557n],
      valueIn: [9975062344139650872817n, 0n],
      pathElements: [
        2051258411002736885948763699317990061539314419500486054347250703186609807356n,
        798649550954976630491249457249448595186529806442197797936973525980664838735n,
        3860253447950477476238282376227806265529430782364398060886622632609206263506n,
        10967393403090576943058612851160624964768856418916757431315467969379265276661n,
        4177329909171803290170279196019319447087145475250139657920728261184066492383n,
        9144726083425293457189930182175584375755866170755203037168330473435257599943n,
        8236371367060628245320813572019740297071112030680295018688014025332724941914n,
        20704513355749821470300998799414731362245300238021178553122435057113528378476n,
        16736886623818773524263138779809916105169520362832964900272252437275369959388n,
        16415580715665869864634788741927065679186058985255106992778939765291984104497n,
        5715205213015845364387052206849889843188282449933545435544812025608946666822n,
        11013175031749877081979736330659999751637067247483574805902945041305483682579n,
        10708260192616993577686743465610377735773279483333447100671640147037242870779n,
        17708681376628530799996447981717676562184543188562031708516142906406141650368n,
        3967876508977884960877910167550068853181553556854105674925421366723704424223n,
        18077967785446169488603147322170139942753858441115263187838141084900323103797n,
        2051258411002736885948763699317990061539314419500486054347250703186609807356n,
        798649550954976630491249457249448595186529806442197797936973525980664838735n,
        3860253447950477476238282376227806265529430782364398060886622632609206263506n,
        10967393403090576943058612851160624964768856418916757431315467969379265276661n,
        4177329909171803290170279196019319447087145475250139657920728261184066492383n,
        9144726083425293457189930182175584375755866170755203037168330473435257599943n,
        8236371367060628245320813572019740297071112030680295018688014025332724941914n,
        20704513355749821470300998799414731362245300238021178553122435057113528378476n,
        16736886623818773524263138779809916105169520362832964900272252437275369959388n,
        16415580715665869864634788741927065679186058985255106992778939765291984104497n,
        5715205213015845364387052206849889843188282449933545435544812025608946666822n,
        11013175031749877081979736330659999751637067247483574805902945041305483682579n,
        10708260192616993577686743465610377735773279483333447100671640147037242870779n,
        17708681376628530799996447981717676562184543188562031708516142906406141650368n,
        3967876508977884960877910167550068853181553556854105674925421366723704424223n,
        18077967785446169488603147322170139942753858441115263187838141084900323103798n
      ],
      leavesIndices: [0n, 0n],
      nullifyingKey: 8368299126798249740586535953124199418524409103803955764525436743456763691384n,
      npkOut: [
        18155422517519710121567557298796336647851001757086572188586973563076356884330n,
        14453327337221153863920321130101533812935021152859474978476854443074076494952n
      ],
      valueOut: [65000000000000000000n, 9910062344139650872817n]
    }

    await assert.rejects(circuit.calculateWitness(inputs))
  });
});
